# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        poetry-version: ["1.5.0"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install  and Configure Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user pipx
          python -m pipx install poetry==${{ matrix.poetry-version }}
          python -m pipx ensurepath
          poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: .venv
          key:
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.version }}-${{
            hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Typecheck with pyright
        run: |
          poetry run pyright

      - name: Test with pytest
        run: |
          poetry run pytest

      # Only lint in one OS/version combo
      - name: Lint with ruff
        if:
          ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' }}
        run: |
          poetry run ruff check . --format=github

      # Only check formatting in one OS/version combo
      - name: Check formatting with black
        if:
          ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' }}
        run: |
          poetry run black --check .
